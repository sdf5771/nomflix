{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","Loader","map","movie","original_title","poster_path","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","console","log","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","topRated","airingToday","TVContainter","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainter","includes","match","push","history","parsedID","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.665f2438.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params:{\n        api_key : \"c332d2d4a9d3cf4437060443a1253aac\",\n        language : \"en-US\",\n\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying : () => api.get(\"movie/now_playing\"),\n    upcoming : () => api.get(\"movie/upcoming\"),\n    popular : () => api.get(\"movie/popular\"),\n    movieDetail : id => api.get(`movie/${id}`, {\n        params:{\n            append_to_response: \"videos\"\n        }\n    }),\n    search : term => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};\n\nexport const tvApi = {\n    topRated : () => api.get(\"tv/top_rated\"),\n    popular : () => api.get(\"tv/popular\"),\n    airingToday : () => api.get(\"tv/airing_today\"),\n    showDetail : id => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search : term => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size:16px;\n    font-weight: 600;\n    \n`;\n\nconst Grid = styled.div`\n    margin-top:25px;\n    display:grid;\n    grid-template-columns:repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title:PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height:100vh;\n    width:100vw;\n    display:flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default() => (\n    <Container>\n        <span role='img' aria-label='loading'>\n        ⏰\n        </span>\n    </Container>\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:100vw;\n    display:flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color:${props => props.color};\n`;\n\nconst Message = ({ text, color }) =>  (\n    <Container>\n        <Text color={color}>\n            {text}\n        </Text>\n    </Container>\n);\n\nMessage.propTypes ={\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height:180px;\n    background-size:cover;\n    border-radius:4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom:-5px;\n    right:5px;\n    position: absolute;\n    opacity:0;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom:5px;\n    position: relative;\n    &:hover{\n        ${Image}{\n            opacity:0.3;\n        }\n        ${Rating}{\n            opacity:1;\n        }        \n    }\n`;\n\nconst Title = styled.span`\n    display:block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255,255,255,0.5);\n`;\n\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl={imageUrl \n                ? `https://image.tmdb.org/t/p/w300${imageUrl}` \n                : require(\"../assets/noPosterSmall.png\")\n            }\n            />\n                <Rating>\n                    <span role='img' aria-label='rating'>⭐️</span>\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n        <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n        <Year>{year}</Year>\n        </Container>\n    </Link>\n)\n;\n\nPoster.propTypes ={\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n    padding : 20px;\n`;\n\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\n<>\n    <Helmet>\n        <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ?  (\n        <Loader/>\n    ) : (\n    <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => \n            <Poster \n            key={movie.id} \n            id={movie.id} \n            title={movie.original_title} \n            imageUrl={movie.poster_path}\n            rating={movie.vote_average}\n            isMovie={true}\n            year={movie.release_date && movie.release_date.substring(0,4)}/>\n            )}\n            </Section>\n            )}\n\n        {upcoming && upcoming.length > 0 && (\n        <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => \n            <Poster \n            key={movie.id} \n            id={movie.id} \n            title={movie.original_title} \n            imageUrl={movie.poster_path}\n            rating={movie.vote_average}\n            isMovie={true}\n            year={movie.release_date && movie.release_date.substring(0,4)}/>\n            )}\n            </Section>\n            )}\n\n        {popular && popular.length > 0 && (\n        <Section title=\"Popular Movies\">\n            {popular.map(movie => \n            <Poster \n            key={movie.id} \n            id={movie.id} \n            title={movie.original_title} \n            imageUrl={movie.poster_path}\n            rating={movie.vote_average}\n            isMovie={true}\n            year={movie.release_date && movie.release_date.substring(0,4)}/>\n            )}\n            </Section>\n            )}\n\n        {error && <Message color='#e74c3c' text={error}/>}\n    </Container>)}\n</>\n    \n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;","import { moviesApi } from \"../../api\";\nimport React from \"react\";\nimport HomePresenter from './HomePresenter';\n\n\nexport default class extends React.Component{\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try{\n            const {data : {results : nowPlaying}} = await moviesApi.nowPlaying();\n\n            const {data : {results : upcoming}} = await moviesApi.upcoming();\n\n            const {data : {results : popular}} = await moviesApi.popular();\n\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            })\n        } catch {\n\n            this.setState({\n\n                error: \"Can't find Movie information.\"\n\n            });\n\n        } finally {\n\n            this.setState({\n\n                loading : false\n\n            });\n\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        console.log(this.state);\n        return (\n            <HomePresenter \n                nowPlaying={nowPlaying} \n                upcoming={upcoming} \n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport propTypes from 'prop-types';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n    padding : 0px 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width:100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width:100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, loading, error, searchTerm, handleSubmit, updateTerm }) => \n<Container>\n    <Helmet><title>Search | Nomflix</title></Helmet>\n    <Form onSubmit={handleSubmit}>\n        <Input \n        placeholder=\"Search Movies or TV Shows...\" \n        value={searchTerm} \n        onChange={updateTerm}/>\n    </Form>\n    {loading ? (\n    <Loader/>\n    ) : (\n    <>\n    {movieResults && movieResults.length > 0 && (\n        <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n            <Poster \n            key={movie.id} \n            id={movie.id} \n            title={movie.original_title} \n            imageUrl={movie.poster_path}\n            rating={movie.vote_average}\n            isMovie={true}\n            year={movie.release_date && movie.release_date.substring(0,4)}/>\n            ))}\n        </Section>\n    )}\n    {tvResults && tvResults.length > 0 && (\n        <Section title=\"TV Results\">\n            {tvResults.map(show => (\n            <Poster \n            key={show.id} \n            id={show.id} \n            title={show.original_name} \n            imageUrl={show.poster_path}\n            rating={show.vote_average}\n            year={show.first_air_date && show.first_air_date.substring(0,4)}/>\n            ))}\n        </Section>\n    )}\n    {error && <Message color='#e74c3c' text={error} />}\n    {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n    <Message color=\"#95a5a6\" text={`Nothing found for : ${searchTerm}`}/>\n    )}   \n    </>)}\n</Container>;\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    searchTerm: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\n\n\nexport default SearchContainer;","import { moviesApi, tvApi } from 'api';\nimport React from 'react';\nimport { ThemeConsumer } from 'styled-components';\nimport SearchPresenter from './SearchPresenter';\n\nexport default class extends React.Component{\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading : false,\n        error : null\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if(searchTerm !== \"\"){\n            this.searchByTerm()\n        }\n    };\n\n    updateTerm = (event) => {\n        const { target: { value } } = event;\n        this.setState({\n            searchTerm: value\n        })\n    };\n\n    searchByTerm = async() => {\n        const { searchTerm } = this.state;\n\n        this.setState({ loading : true });\n        try {\n            const {data : {results : tvResults}} = await tvApi.search( searchTerm );\n            const {data : {results : movieResults}} = await moviesApi.search( searchTerm );\n\n            this.setState({\n                movieResults,\n                tvResults\n            });\n        } catch {\n\n            this.setState({ error : \"Can't find results.\" });\n\n        } finally {\n\n            this.setState({ loading : false });\n\n        }\n    };\n    \n    render() {\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n        console.log(this.state);\n        return (<SearchPresenter \n            movieResults={movieResults}\n            tvResults={tvResults}\n            searchTerm={searchTerm}\n            loading={loading}\n            error={error}\n            handleSubmit = {this.handleSubmit}\n            updateTerm = {this.updateTerm}\n        />\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n    padding:20px;\n`;\n\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n    <>\n    <Helmet>\n        <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n<Loader />\n) : ( \n<Container>\n    {topRated && topRated.length > 0 && (\n        <Section title=\"Top Rated Shows\">\n            {topRated.map(show => \n            <Poster \n            key={show.id} \n            id={show.id} \n            title={show.original_name} \n            imageUrl={show.poster_path}\n            rating={show.vote_average}\n            year={show.first_air_date && show.first_air_date.substring(0,4)}/>\n            )}\n        </Section>\n    )}\n\n    {popular && popular.length > 0 && (\n        <Section title=\"Popular Shows\">\n            {popular.map(show => \n            <Poster \n            key={show.id} \n            id={show.id} \n            title={show.original_name} \n            imageUrl={show.poster_path}\n            rating={show.vote_average}\n            year={show.first_air_date && show.first_air_date.substring(0,4)}/>\n            )}\n        </Section>\n    )}\n\n    {airingToday && airingToday.length > 0 && (\n        <Section title=\"On Airing Today!\">\n            {airingToday.map(show => \n            <Poster \n            key={show.id} \n            id={show.id} \n            title={show.original_name} \n            imageUrl={show.poster_path}\n            rating={show.vote_average}\n            year={show.first_air_date && show.first_air_date.substring(0,4)}/>\n            )}\n        </Section>\n    )}\n    {error && <Message color='#e74c3c' text={error} />}\n</Container>)}\n    </>\n);\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainter from './TVContainer';\n\nexport default TVContainter;","import { tvApi } from 'api';\nimport React from 'react';\nimport TVPresenter from './TVPresenter';\n\nexport default class extends React.Component{\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading : true,\n        error : null\n    }\n\n    async componentDidMount() {\n        try{\n\n            const {data : {results : topRated}} = await tvApi.topRated();\n\n            const {data : {results : popular}} = await tvApi.popular();\n\n            const {data : {results : airingToday}} = await tvApi.airingToday();\n            \n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            })\n        } catch {\n\n            this.setState({\n                error: \"Can't find TV information.\"\n            });\n\n        } finally {\n\n            this.setState({ loading : false });\n\n        }\n    }\n    \n    render() {\n        const { topRated, popular, airingToday, loading, error } = this.state;\n        console.log(this.state);\n        return (<TVPresenter \n            topRated={topRated}\n            popular={popular}\n            airingToday={airingToday}\n            loading={loading}\n            error={error}\n        />\n        );\n    }\n}","import React from 'react';\nimport { Link, withRouter }from 'react-router-dom';\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color : white;\n    position : fixed;\n    top : 0;\n    left : 0;\n    width : 100%;\n    height : 50px;\n    display:flex;\n    align-items : center;\n    padding : 0px 10px;\n    background-color : rgba(20, 20, 20, 0.8);\n    z-index : 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display:flex;\n\n`;\n\nconst Item = styled.li`\n    width : 70px;\n    height : 50px;\n    text-align : center;\n    border-bottom : 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\n    transition:border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height : 50px;\n    display : flex;\n    align-items : center;\n    justify-content : center;\n`;\n\nexport default withRouter(({ location : { pathname }}) => (\n<Header>\n    <List>\n        <Item current={pathname === '/'}>\n            <SLink to=\"/\">Movies</SLink>\n        </Item>\n        <Item current={pathname === '/tv'}>\n            <SLink to=\"/tv\">TV</SLink>\n        </Item>\n        <Item current={pathname === '/search'}>\n            <SLink to=\"/search\">Search</SLink>\n        </Item>\n    </List>\n</Header>\n));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position:absolute;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background-image: url(${props => props.bgImage});\n    background-position : center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display:flex;\n    width: 100%;\n    position:relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    width:30%;\n    height:100%;\n    background-image: url(${props => props.bgImage});\n    background-position : center center;\n    background-size: cover;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n    margin-bottom: 20px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size : 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) => (\n    loading ? (\n    <>\n    <Helmet><title>Loading | Nomflix</title></Helmet>\n    <Loader/>\n    </>\n        ) : (\n        error ? <Message /> : \n        <Container>\n            <Helmet><title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title></Helmet>\n            <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}/>\n            <Content>\n                <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"assets/noPosterSmall.png\")} />\n            <Data>\n                <Title>{result.original_title ? result.original_title : result.original_name }</Title>\n                <ItemContainer>\n                    <Item>\n                        {result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}\n                    </Item>\n                    <Divider>✓</Divider>\n                    <Item>\n                        The Runtime is {result.runtime ? result.runtime : result.episode_run_time[0]} min\n                    </Item>\n                    <Divider>✓</Divider>\n                    <Item>\n                        {result.genres && result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name} / `)}\n                    </Item>\n                </ItemContainer>\n                <Overview>\n                    {result.overview}\n                </Overview>\n            </Data>\n            </Content>\n        </Container>\n        )\n);\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainter from './DetailContainer';\n\nexport default DetailContainter;","import { moviesApi, tvApi } from 'api';\nimport React from 'react';\nimport DetailPresenter from './DetailPresenter';\n\nexport default class extends React.Component{\n    constructor(props){\n        const {location : { pathname }} = props;\n        super(props);\n        this.state = {\n            result : null,\n            loading : true,\n            error : null,\n            isMovie : pathname.includes(\"/movie/\")\n        };\n    }\n    \n    async componentDidMount() {\n            const {\n                match: {\n                    params: { id }\n                },\n                history : { push }\n            } = this.props;\n            const { isMovie } = this.state;\n            const parsedID =  parseInt(id);\n            if (isNaN(parsedID)){\n                return push(\"/\"); // if id value is not number go back home\n            }\n\n            let result = null;\n\n            try {\n                if(isMovie){\n                    ({ data: result } = await moviesApi.movieDetail(parsedID));\n                } else {\n                    ({ data: result } = await tvApi.showDetail(parsedID));\n                }\n\n\n            } catch {\n\n                this.setState({ error: \"Can't find anything.\" });\n\n            } finally {\n\n                this.setState({ loading : false, result });\n\n            }\n    }\n    \n    render() {\n        console.log(this.state);\n        const { result, loading, error } = this.state;\n        return (\n        <DetailPresenter \n            result={result}\n            loading={loading}\n            error={error}\n        />\n        );\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport Home from 'Routes/Home/index';\nimport Search from 'Routes/Search/index';\nimport TV from 'Routes/TV/index';\nimport Header from 'Components/Header';\nimport Detail from '../Routes/Detail/index';\n\nexport default () => (\n    <Router>\n      <>\n      <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/tv\" exact component={TV}/>\n          <Route path=\"/search\" component={Search}/>\n          <Route path=\"/movie/:id\" component={Detail}/>\n          <Route path=\"/show/:id\" component={Detail}/>\n          <Redirect from='*' to='/'/>\n        </Switch>\n        </>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n\n    }\n    body{\n        font-family:-apple-system;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color : white;\n        padding-top : 50px;\n    }\n`;\n\nexport default globalStyles;","import { render } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport Router from './Router';\nimport GlobalStyles from './GlobalStyles';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./Components/App\";\n\nReactDOM.render(  \n    <React.StrictMode>\n        <App />\n    </React.StrictMode>, \ndocument.getElementById('root'));"],"sourceRoot":""}